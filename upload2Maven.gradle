/**
 * 使用方法，在主工程根目录下执行命令：
 * Windows 系统：gradlew -b upload2Maven.gradle uploadArchives
 * Mac/Linux 系统 ./gradlew -b upload2Maven.gradle uploadArchives
 */

// 获取 maven 仓库信息
File mavenTokenFile = new File("./mavenToken.txt")
if (!mavenTokenFile.exists() || !mavenTokenFile.isFile()) {
    throw new IOException("maven token file not exists")
}
String mavenUrl = null
String mavenUserName = null
String mavenPasswords = null
// 以换行符为分隔，过滤以 # 开头的注释行，找到前三行非注释行，分别赋值为 mavenUrl、mavenUserName 和 mavenPasswords
String[] mavenTokenInfo = mavenTokenFile.text.split('\n')
for (int i = 0; i < mavenTokenInfo.length; i++) {
    if (!mavenTokenInfo[i].startsWith('#')) {
        if (mavenUrl == null) {
            // 要注意去除首尾空白字符
            mavenUrl = mavenTokenInfo[i].trim()
        } else if (mavenUserName == null) {
            mavenUserName = mavenTokenInfo[i].trim()
        } else if (mavenPasswords == null) {
            mavenPasswords = mavenTokenInfo[i].trim()
        } else {
            // 将 mavenUrl、mavenUserName 和 mavenPasswords 赋值完后就结束
            break
        }
    }
}
println "mavenUrl = [$mavenUrl]"
println "mavenUserName = [$mavenUserName]"
println "mavenPasswords = [$mavenPasswords]"

apply plugin: 'maven'

/* 指定要上传的制品库版本 */
def version = "1.0.0"
/* 指定要上传的制品库文件在本地的绝对路径，例：C:\Users\hongweiqiu\Documents\WXWork\1688850566796750\Cache\File\2020-06\open_sdk.jar */
def productFilePath = "./repos/com/hiro/android/bytecode_slimming/${version}/bytecode_slimming-${version}.jar"
println "productFilePath = [$productFilePath]"

repositories {
    mavenCentral()
}

artifacts {
    archives file(productFilePath)
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenUrl) {
                authentication(userName: mavenUserName, password: mavenPasswords)
            }
            /* 指定要上传的制品库所属的组织（一般不用变） */
            pom.groupId = "com.hiro.android"
            /* 指定要上传的制品库产物 id */
            pom.artifactId = "bytecode_slimming"
            /* 指定要上传的制品库版本 */
            pom.version = version
            /* 指定制品库类型（jar/aar） */
            pom.packaging = "jar"
            /* 指定制品库描述 pom 文件的文件名（${artifactId}-${version}） */
            pom.name = "bytecode_slimming-$version"

            println "classpath '${pom.groupId}:${pom.artifactId}:${pom.version}'"
        }
    }
}
